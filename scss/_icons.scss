// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          play: 'f101',
          play-circle: 'f102',
          pause: 'f103',
          volume-mute: 'f104',
          volume-low: 'f105',
          volume-mid: 'f106',
          volume-high: 'f107',
          fullscreen-enter: 'f108',
          fullscreen-exit: 'f109',
          square: 'f10a',
          spinner: 'f10b',
          subtitles: 'f10c',
          captions: 'f10d',
          chapters: 'f10e',
          share: 'f10f',
          cog: 'f110',
          circle: 'f111',
          circle-outline: 'f112',
          circle-inner-circle: 'f113',
          hd: 'f114',
          cancel: 'f115',
          replay: 'f116',
          facebook: 'f117',
          gplus: 'f118',
          linkedin: 'f119',
          twitter: 'f11a',
          tumblr: 'f11b',
          pinterest: 'f11c',
          audio-description: 'f11d',
          audio: 'f11e',
          next-item: 'f11f',
          previous-item: 'f120',
          scale-up-screen: 'f121',
          scale-down-screen: 'f122',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}

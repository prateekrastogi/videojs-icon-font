// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          play: 'f101',
          play-circle: 'f102',
          pause: 'f103',
          volume-mute: 'f104',
          volume-low: 'f105',
          volume-mid: 'f106',
          volume-high: 'f107',
          fullscreen-enter: 'f108',
          fullscreen-exit: 'f109',
          square: 'f10a',
          spinner: 'f10b',
          subtitles: 'f10c',
          captions: 'f10d',
          chapters: 'f10e',
          share: 'f10f',
          cog: 'f110',
          circle: 'f111',
          circle-outline: 'f112',
          circle-inner-circle: 'f113',
          hd: 'f114',
          cancel: 'f115',
          replay: 'f116',
          facebook: 'f117',
          gplus: 'f118',
          linkedin: 'f119',
          twitter: 'f11a',
          tumblr: 'f11b',
          pinterest: 'f11c',
          audio-description: 'f11d',
          audio: 'f11e',
          next-item: 'f11f',
          previous-item: 'f120',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
